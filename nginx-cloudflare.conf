# Nginx configuration for resizeimages.co.in with Cloudflare
#
# Installation instructions:
# 1. Copy this file to: /etc/nginx/sites-available/resizeimages.co.in
# 2. Update the paths marked with "CHANGE_THIS"
# 3. Test: sudo nginx -t
# 4. Reload: sudo systemctl reload nginx

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=upload:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;

server {
    listen 80;
    server_name resizeimages.co.in www.resizeimages.co.in;

    # Redirect HTTP to HTTPS (Cloudflare will handle the actual SSL)
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name resizeimages.co.in www.resizeimages.co.in;

    # SSL Configuration (Keep your existing Let's Encrypt certificates)
    # CHANGE_THIS: Update to your actual certificate paths
    ssl_certificate /etc/letsencrypt/live/resizeimages.co.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/resizeimages.co.in/privkey.pem;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # IMPORTANT: Cloudflare Real IP Configuration
    # These IP ranges are current as of 2024 - update if needed from:
    # https://www.cloudflare.com/ips/
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2c0f:f248::/32;
    set_real_ip_from 2a06:98c0::/29;

    # Use Cloudflare's real IP header
    real_ip_header CF-Connecting-IP;

    # Security headers (some may be redundant with Cloudflare)
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # HSTS header (optional - Cloudflare can handle this too)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Logging with real IP
    access_log /var/log/nginx/resizeimages.access.log combined;
    error_log /var/log/nginx/resizeimages.error.log warn;

    # Basic rate limiting for all requests
    limit_req zone=general burst=10 nodelay;

    # Health check endpoint (no rate limiting)
    location = /health {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ray $http_cf_ray;

        access_log off;  # Don't log health checks
    }

    # Debug endpoint for testing Cloudflare headers
    location = /debug/headers {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ray $http_cf_ray;
        proxy_set_header CF-Visitor $http_cf_visitor;
    }

    # Static files - served directly by nginx with long caching
    location /static/ {
        # CHANGE_THIS: Update to your actual static files path
        alias /path/to/your/app/static/;

        # Long cache for static assets
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;

        # Gzip compression
        gzip on;
        gzip_types text/css application/javascript image/svg+xml;
        gzip_min_length 1000;

        # No rate limiting for static files
    }

    # Robots.txt and sitemap.xml - cached but not too long
    location ~ ^/(robots\.txt|sitemap\.xml)$ {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;

        # Cache for 1 hour
        expires 1h;
        add_header Cache-Control "public";
    }

    # Upload/processing endpoints - strict rate limiting and longer timeouts
    location ~* ^/(compress|resize|convert|video|upload|watermark|crop|rotate|blur|merge) {
        limit_req zone=upload burst=3 nodelay;

        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ray $http_cf_ray;

        # Longer timeouts for processing
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_buffering off;

        # Increase upload size limits
        client_max_body_size 1G;
        client_body_timeout 300s;
        client_header_timeout 60s;

        # No caching for processing endpoints
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Authentication endpoints - moderate rate limiting
    location ~* ^/(login|register|logout|check-auth) {
        limit_req zone=api burst=5 nodelay;

        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ray $http_cf_ray;

        # No caching for auth endpoints
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Download endpoints - moderate rate limiting
    location ~* ^/(download|outputs|video_outputs)/ {
        limit_req zone=api burst=10 nodelay;

        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;

        # Short cache for downloads
        expires 1h;
        add_header Cache-Control "private";
    }

    # All other requests - default handling
    location / {
        limit_req zone=general burst=10 nodelay;

        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ray $http_cf_ray;
        proxy_set_header CF-Visitor $http_cf_visitor;

        # Standard timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Cache static pages briefly
        location ~* ^/(blog|contact)$ {
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;

            expires 30m;
            add_header Cache-Control "public";
        }
    }

    # Security: Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block common exploit attempts
    location ~* /(wp-admin|wp-login|xmlrpc|admin|phpmyadmin) {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }
}

# Optional: Redirect www to non-www (or vice versa)
server {
    listen 443 ssl http2;
    server_name www.resizeimages.co.in;

    # Use same SSL certificates
    ssl_certificate /etc/letsencrypt/live/resizeimages.co.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/resizeimages.co.in/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;

    # Redirect to non-www
    return 301 https://resizeimages.co.in$request_uri;
}